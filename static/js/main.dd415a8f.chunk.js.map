{"version":3,"sources":["components/Song.js","components/Player.js","components/LibarySong.js","components/Library.js","components/Header.js","components/data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","audioRef","songInfo","setSongInfo","isPlaying","setIsPlaying","skipTrackHandler","isShuffling","setIsShuffling","useState","value","visibility","volumeInfo","setVolumeInfo","playIcon","icon","faPause","size","faPlay","getTime","timer","ss","parseInt","sm","trackStyle","transform","animationPercentage","WebkitTransform","MozTransform","trackBackground","background","color","activeShuffle","displayVolume","lightVolume","current","style","type","id","onChange","e","target","currentTime","min","max","duration","onClick","faVolumeUp","faStepBackward","pause","play","faStepForward","faRandom","step","volume","LibrarySong","song","songSelectHandler","activeSong","active","Library","songs","setCurrentSong","setSongs","libraryStatus","map","a","selected","filter","songList","showLibrary","Header","setLibraryStatus","faMusic","chillHop","audio","nanoid","App","data","useRef","timeUpdateHandler","roundedCurrent","Math","round","roundedDuration","setRandomIndex","index","floor","random","direction","currentIndex","findIndex","randomIndex","length","activeLibraryHandler","songEndHandler","nextPrev","activeLibrary","ref","title","onTimeUpdate","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd415a8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Song = ({ currentSong }) => {\r\n\r\n\r\n  return (\r\n    <section className=\"song-header\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2 className=\"h3\">{currentSong.name}</h2>\r\n      <h3 className=\"h4\">{currentSong.artist}</h3>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Song","import React, { useState } from 'react';\r\n\r\n// Import fontawesome icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faStepForward, faStepBackward, faRandom, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({ \r\n  currentSong, \r\n  audioRef, \r\n  songInfo, \r\n  setSongInfo,\r\n  isPlaying, \r\n  setIsPlaying,\r\n  skipTrackHandler,\r\n  isShuffling,\r\n  setIsShuffling\r\n}) => {\r\n\r\n  // State declaration\r\n  const [volumeInfo, setVolumeInfo] = useState({\r\n    value: 10,\r\n    visibility: false\r\n  });\r\n\r\n  // Handle play event\r\n  const handlePlay = () => {\r\n    if(isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  }\r\n\r\n  // Switching between play and pause\r\n  const playIcon = isPlaying ? (\r\n    <FontAwesomeIcon icon={faPause} size=\"2x\" />\r\n  ) : (\r\n    <FontAwesomeIcon icon={faPlay} size=\"2x\" />\r\n  );\r\n\r\n  // Song timer function\r\n  const getTime = (timer) => {\r\n    let ss = parseInt(timer % 60);\r\n    let sm = parseInt((timer / 60) % 60);\r\n    return (\r\n      (ss < 10) ? `${sm}:0${ss}` : `${sm}:${ss}`\r\n    );\r\n  }\r\n\r\n  // Drag handler\r\n  const dragHandler = (e) => {\r\n    setSongInfo({...songInfo, current: e.target.value});\r\n    audioRef.current.currentTime = e.target.value;\r\n  }\r\n\r\n  // Volume event\r\n  const volumeHandler = (e) => {\r\n    const value = e.target.value;\r\n    audioRef.current.volume = value / 10;\r\n    setVolumeInfo({...volumeInfo, value});\r\n  }\r\n\r\n  // Declaring style for tracking slider\r\n  const trackStyle = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    WebkitTransform: `translateX(${songInfo.animationPercentage}%)`,\r\n    MozTransform: `translateX(${songInfo.animationPercentage}%)`\r\n  }\r\n\r\n  const trackBackground = {\r\n    background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\r\n  }\r\n\r\n  // Condition for turning on shuffling \r\n  const activeShuffle = isShuffling ? \"active-shuffle\" : '';\r\n\r\n  // Hiding volume \r\n  const displayVolume = volumeInfo.visibility ? \"show\" : '';\r\n\r\n  // Highlight volume\r\n  const lightVolume = volumeInfo.visibility ? \"primary-color\" : '';\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p className=\"parag\">{ getTime(songInfo.current) }</p>\r\n        <div className=\"track\" style={trackBackground}>\r\n          <input\r\n            type=\"range\" \r\n            name={currentSong.id} \r\n            id=\"seekBar\"\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.current} \r\n          />\r\n          <div className=\"animate-track\" style={trackStyle}></div>\r\n        </div>\r\n        <p className=\"parag\">{ songInfo.duration ? getTime(songInfo.duration) : \"0:00\" }</p>\r\n      </div>\r\n\r\n      <div className=\"player-control\">\r\n        <button className={ `btn ${lightVolume}` } onClick={ () => setVolumeInfo( {...volumeInfo, visibility: !volumeInfo.visibility}) }>\r\n          <FontAwesomeIcon icon={faVolumeUp} />\r\n        </button>\r\n        <button className=\"btn\" onClick={() => skipTrackHandler(\"skip-backward\")}>\r\n          <FontAwesomeIcon icon={faStepBackward} />\r\n        </button>\r\n        <button className=\"btn\" onClick={handlePlay}>{playIcon}</button>\r\n        <button className=\"btn\" onClick={() => skipTrackHandler(\"skip-forward\")}>\r\n          <FontAwesomeIcon icon={faStepForward} />\r\n        </button>\r\n        <button className={`btn ${activeShuffle}`} onClick={() => setIsShuffling(!isShuffling)}>\r\n          <FontAwesomeIcon icon={faRandom} />  \r\n        </button>      \r\n      </div>\r\n      <div className={ `volume-wrapper ${displayVolume}` }>\r\n        <input \r\n          type=\"range\" \r\n          id=\"volume\" \r\n          value={volumeInfo.value}\r\n          min=\"0\" \r\n          max=\"10\" \r\n          step=\"0.01\" \r\n          onChange={volumeHandler} \r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player","import React from 'react';\r\n\r\n\r\nconst LibrarySong = ({ song, songSelectHandler, activeSong }) => {\r\n\r\n  // Select song from library and do something\r\n  const selectedLibrarySong = (id) => {\r\n    songSelectHandler(id);\r\n    activeSong(id);\r\n  }\r\n\r\n  const active = song.active ? \"selected\" : '';\r\n\r\n  return (\r\n    <li className={`song-item ${active}`} onClick={() => selectedLibrarySong(song.id)}>\r\n      <img src={song.cover} alt={song.name} />\r\n      <div className=\"song-description\">\r\n        <h4 className=\"parag\">{song.name}</h4>\r\n        <h5 className=\"h5\">{song.artist}</h5>\r\n      </div>\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default LibrarySong;","import React from 'react';\r\n\r\n//import { utils } from './utils';\r\n\r\n// Import component\r\nimport LibrarySong from './LibarySong';\r\n\r\n\r\nconst Library = ({ \r\n  songs, \r\n  setCurrentSong, \r\n  setSongs, \r\n  audioRef, \r\n  isPlaying,\r\n  libraryStatus\r\n}) => {\r\n\r\n  // Highlight the active song \r\n  const activeSong = (id) => {\r\n    const active = songs.map(song => {\r\n      if(song.id === id) {\r\n        return {...song, active: true}\r\n      } else {\r\n        return {...song, active: false}\r\n      }\r\n    });\r\n\r\n    setSongs(active)\r\n  }\r\n\r\n  const songSelectHandler = async (id) => {\r\n    const selected = songs.filter(song => (\r\n      song.id === id\r\n    ));\r\n\r\n    await setCurrentSong(...selected);\r\n    if (isPlaying) audioRef.current.play();\r\n  }\r\n\r\n\r\n  const songList = songs.map(song => (\r\n    <LibrarySong \r\n      id={song.id}\r\n      key={song.id}\r\n      song={song}\r\n      songSelectHandler={songSelectHandler}\r\n      activeSong={activeSong}\r\n    />\r\n  ))\r\n\r\n  const showLibrary = libraryStatus ? 'active-library' : '';\r\n\r\n  return (\r\n    <nav className={`library ${showLibrary}`}>\r\n      <h2 className=\"h4\">Library</h2>\r\n      <ul className=\"song-list\">{songList}</ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\n\r\n// Importing fontawesome icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = ({ libraryStatus, setLibraryStatus }) => {\r\n\r\n  return (\r\n    <header className=\"music-header\">\r\n      <h1 className=\"h3\">Waves</h1>\r\n      <button className=\"btn\" onClick={ () => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <span>\r\n          <FontAwesomeIcon icon={faMusic} />\r\n        </span>\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { nanoid } from 'nanoid';\r\n\r\nfunction chillHop () {\r\n  return [\r\n    {\r\n      name: \"Dawn\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273a5f0ece59a9def78ad477d2b\",\r\n      artist: \"Toonorth\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=17941\",\r\n      color: [\"#25354f\", \"#3c4f6f\"],\r\n      id: `id-${nanoid()}`,\r\n      active: true\r\n    },\r\n\r\n    {\r\n      name: \"Dreamstate\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273a5f0ece59a9def78ad477d2b\",\r\n      artist: \"Toonorth\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=17947\",\r\n      color: [\"#25354f\", \"#3c4f6f\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    },\r\n\r\n    {\r\n      name: \"Man it's late\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273e61a3d49a9256ceb24892f73\",\r\n      artist: \"Mommy, sleepy fish\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=19064\",\r\n      color: [\"#5b8cce\", \"#779ed9\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    },\r\n\r\n    {\r\n      name: \"Higher\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b27382a863c04b0f7d55c8afed01\",\r\n      artist: \"Misha, Jussi Halme\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15088\",\r\n      color: [\"#ff9d60\", \"#d54948\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    },\r\n\r\n    {\r\n      name: \"Evening stroll\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273250f6203bf51f361c7e8fac9\",\r\n      artist: \"xander, Blue Wednesday\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=16178\",\r\n      color: [\"#eb7553\", \"#e4b04d\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    },\r\n\r\n    {\r\n      name: \"Despair\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273250f6203bf51f361c7e8fac9\",\r\n      artist: \"Evil needle\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=16213\",\r\n      color: [\"#eb7553\", \"#e4b04d\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    },\r\n\r\n    {\r\n      name: \"Roses and flames\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b27313e60e805a525f41d1b2bc14\",\r\n      artist: \"C Y G N\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14985\",\r\n      color: [\"#402d5a\", \"#a253b7\"],\r\n      id: `id-${nanoid()}`,\r\n      active: false\r\n    }\r\n  ]\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from 'react';\n\n// Import styles\nimport './styles/app.scss';\n\n// Import components\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport Library from './components/Library';\nimport Header from './components/Header';\n\n// Importing data \nimport data from \"./components/data\";\n\nfunction App() {\n\n  // Declaring states\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [songInfo, setSongInfo] = useState({\n    current: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isShuffling, setIsShuffling] = useState(false);\n\n  // Declaring ref\n  const audioRef = useRef(null);\n\n  // Handling time update\n  const timeUpdateHandler = (e) => {\n    let duration = e.target.duration;\n    let currentTime = e.target.currentTime;\n    let roundedCurrent = Math.round(songInfo.current);\n    let roundedDuration = Math.round(songInfo.duration);\n\n    const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100); \n\n    setSongInfo({...songInfo, current: currentTime, duration, animationPercentage});\n  }\n\n  // Function for random index\n  const setRandomIndex = (index) => {\n    return Math.floor(Math.random() * index);\n  }\n\n  // Handle skip event\n  const skipTrackHandler = async (direction) => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    // Skip forward \n    if(direction === 'skip-forward') {\n\n      if(isShuffling) {\n        const randomIndex = setRandomIndex(songs.length)\n        await setCurrentSong(songs[randomIndex]);\n        activeLibraryHandler(songs[randomIndex]);\n\n        if(isPlaying) audioRef.current.play();\n\n      } else {\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n        if (isPlaying) audioRef.current.play();\n      }\n    } \n\n    // Skip backwards\n    if (direction === 'skip-backward') {\n      \n      if((currentIndex - 1) < 0) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[currentIndex - 1]);\n      activeLibraryHandler(songs[currentIndex - 1]);\n      if (isPlaying) audioRef.current.play();\n    }\n  }\n\n  // Handle song ended event\n  const songEndHandler = async () => {\n    const currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    // Skip to random song or forward \n    if(isShuffling) {\n      const randomIndex = setRandomIndex(songs.length)\n      await setCurrentSong(songs[randomIndex]);\n      activeLibraryHandler(songs[randomIndex]);\n      if(isPlaying) audioRef.current.play();\n    } else {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n      if (isPlaying) audioRef.current.play();\n    }\n  }\n\n  const activeLibraryHandler = (nextPrev) => {\n    const active = songs.map(song => {\n      if(song.id === nextPrev.id) {\n        return {...song, active: true}\n      } else {\n        return {...song, active: false}\n      }\n    });\n    setSongs(active);\n  }\n\n  // Add library-active class to music container on truthy libraryStatus\n  const activeLibrary = libraryStatus ? \"library-active\" : '';\n\n  return (\n    <div className={ `music-container ${activeLibrary}` }>\n      <Header libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Library\n        songs={songs} \n        setCurrentSong={setCurrentSong} \n        setSongs={setSongs}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n      />\n\n      <Song currentSong={currentSong} />\n\n      <Player\n        currentSong={currentSong} \n        audioRef={audioRef} \n        songInfo={songInfo} \n        setSongInfo={setSongInfo}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        skipTrackHandler={skipTrackHandler}\n        isShuffling={isShuffling}\n        setIsShuffling={setIsShuffling}\n      />\n      <audio\n        src={currentSong.audio}\n        ref={audioRef} \n        title={currentSong.name} \n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n        className=\"audio-element\" \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}